buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Forge Maven"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Gradle Plugins"
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${version_forgegradle}"
        classpath "com.wynprice.cursemaven:CurseMaven:${version_cursemaven}"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.wynprice.cursemaven"

version = "${version_the}"
group = "thaumicenergistics"
archivesBaseName = "thaumicenergistics"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

def mc_run_jvmargs = ["-Xmx${mc_run_mem}", "-Xms${mc_run_mem}", "-Dthaumicenergisticsdebug"]
def version_mc_no_patch = (project.version_mc =~ /^\d+\.\d+/)[0]

minecraft {
    version = "${version_mc}-${version_forge}"
    runDir = "run"
    mappings = "stable_39"
}

runClient {
    jvmArgs mc_run_jvmargs
}

runServer {
    jvmArgs mc_run_jvmargs
}

repositories {
    maven {
        name = "progwml6"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "covers1624"
        url = "https://maven.covers1624.net"
    }
    maven {
        name = 'CB Maven'
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
}

dependencies {
    provided "mezz.jei:jei_${version_jei}:api"
    provided "curse.maven:inventory-tweaks:${version_it}:api"
    provided "curse.maven:hwyla:${version_hwyla}:api"
    provided "mcjty.theoneprobe:TheOneProbe-${version_mc_no_patch}:${version_top}:api"
    deobfCompile("curse.maven:baubles:${version_ba}")
    deobfCompile("curse.maven:thaumcraft:${version_tc}")
    deobfCompile("curse.maven:appliedenergistics2-223794:${version_ae2}") {
        transitive = false
    }

    // Testing mods
    runtime "mezz.jei:jei_${version_jei}"
    //runtime "curse.maven:inventory-tweaks:${version_it}" // Causes issues
    runtime "curse.maven:hwyla:${version_hwyla}"
    runtime "mcjty.theoneprobe:TheOneProbe-${version_mc_no_patch}:${version_top}"
    runtime("curse.maven:thaumic-jei:${version_tjei}") {
        transitive = false
    }
    runtime("curse.maven:redstone-flux:${version_rf}") {
        transitive = false
    }
    runtime("com.brandon3055.brandonscore:BrandonsCore:${version_bc}:universal") {
        transitive = false
    }
    runtime("curse.maven:codechickenlib:${version_ccl}") {
        transitive = false
    }
    runtime("com.brandon3055.projectintelligence:ProjectIntelligence:${version_pi}:universal") {
        transitive = false
    }
}

sourceSets {
    api
    main
}

jar {
    manifest {
        attributes 'FMLAT': 'theeng_at.cfg'
    }
    from sourceSets.api.output
}

javadoc {
    failOnError false
}

task apiJar(type: Jar) {
    from sourceSets.api.output
    from sourceSets.api.java
    classifier 'api'
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from 'build/sources/main/java'
    from 'build/resources/main'
    classifier 'dev'
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from 'build/docs/javadoc'
    classifier 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.api.java
    from sourceSets.main.java
    classifier 'sources'
}

artifacts {
    archives apiJar
    archives deobfJar
    archives sourcesJar
    archives javadocJar
}

// TODO: Publish in a maven repo

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}
